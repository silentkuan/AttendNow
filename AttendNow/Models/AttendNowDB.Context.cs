//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AttendNow.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AttendNow_DBEntities : DbContext
    {
        public AttendNow_DBEntities()
            : base("name=AttendNow_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LOG_sys_setting_role_permission> LOG_sys_setting_role_permission { get; set; }
        public virtual DbSet<LOG_tbl_meeting> LOG_tbl_meeting { get; set; }
        public virtual DbSet<LOG_tbl_user> LOG_tbl_user { get; set; }
        public virtual DbSet<LOG_tbl_view_department> LOG_tbl_view_department { get; set; }
        public virtual DbSet<LOG_tbl_view_factory> LOG_tbl_view_factory { get; set; }
        public virtual DbSet<LOG_tbl_view_location> LOG_tbl_view_location { get; set; }
        public virtual DbSet<sys_setting_define_table> sys_setting_define_table { get; set; }
        public virtual DbSet<sys_setting_role_permission> sys_setting_role_permission { get; set; }
        public virtual DbSet<sys_setting_running_num> sys_setting_running_num { get; set; }
        public virtual DbSet<tbl_department> tbl_department { get; set; }
        public virtual DbSet<tbl_factory> tbl_factory { get; set; }
        public virtual DbSet<tbl_location> tbl_location { get; set; }
        public virtual DbSet<tbl_LocationFactory> tbl_LocationFactory { get; set; }
        public virtual DbSet<tbl_meeting> tbl_meeting { get; set; }
        public virtual DbSet<tbl_meeting_gallery> tbl_meeting_gallery { get; set; }
        public virtual DbSet<tbl_participant> tbl_participant { get; set; }
        public virtual DbSet<tbl_place> tbl_place { get; set; }
        public virtual DbSet<tbl_PlaceFactory> tbl_PlaceFactory { get; set; }
        public virtual DbSet<tbl_role> tbl_role { get; set; }
        public virtual DbSet<tbl_user> tbl_user { get; set; }
        public virtual DbSet<tbl_view_department> tbl_view_department { get; set; }
        public virtual DbSet<tbl_view_factory> tbl_view_factory { get; set; }
        public virtual DbSet<tbl_view_location> tbl_view_location { get; set; }
        public virtual DbSet<tmp_participant> tmp_participant { get; set; }
    
        public virtual ObjectResult<SP_CheckUserCredentials_Result> SP_CheckUserCredentials(string staffNo, string encryptedPassword)
        {
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            var encryptedPasswordParameter = encryptedPassword != null ?
                new ObjectParameter("EncryptedPassword", encryptedPassword) :
                new ObjectParameter("EncryptedPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CheckUserCredentials_Result>("SP_CheckUserCredentials", staffNoParameter, encryptedPasswordParameter);
        }
    
        public virtual ObjectResult<SP_GetDepartments_Result> SP_GetDepartments(string departmentCode, string statusOptions, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string staffNo)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDepartments_Result>("SP_GetDepartments", departmentCodeParameter, statusOptionsParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter, staffNoParameter);
        }
    
        public virtual ObjectResult<SP_GetEmailNotificationData_Result> SP_GetEmailNotificationData(string meetingCode)
        {
            var meetingCodeParameter = meetingCode != null ?
                new ObjectParameter("MeetingCode", meetingCode) :
                new ObjectParameter("MeetingCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetEmailNotificationData_Result>("SP_GetEmailNotificationData", meetingCodeParameter);
        }
    
        public virtual ObjectResult<SP_GetFactorys_Result> SP_GetFactorys(string factory_id, string statusOptions, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string staffNo)
        {
            var factory_idParameter = factory_id != null ?
                new ObjectParameter("Factory_id", factory_id) :
                new ObjectParameter("Factory_id", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFactorys_Result>("SP_GetFactorys", factory_idParameter, statusOptionsParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter, staffNoParameter);
        }
    
        public virtual ObjectResult<SP_GetLocations_Result> SP_GetLocations(string locationCode, string statusOptions, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetLocations_Result>("SP_GetLocations", locationCodeParameter, statusOptionsParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetLocationsWithFactory_Result> SP_GetLocationsWithFactory(string locationCode, string statusOptions, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string staffNo, string controlBy, string factoryID)
        {
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            var controlByParameter = controlBy != null ?
                new ObjectParameter("ControlBy", controlBy) :
                new ObjectParameter("ControlBy", typeof(string));
    
            var factoryIDParameter = factoryID != null ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetLocationsWithFactory_Result>("SP_GetLocationsWithFactory", locationCodeParameter, statusOptionsParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter, staffNoParameter, controlByParameter, factoryIDParameter);
        }
    
        public virtual ObjectResult<SP_GetMeetingGallery_Result> SP_GetMeetingGallery(string meetingCode)
        {
            var meetingCodeParameter = meetingCode != null ?
                new ObjectParameter("MeetingCode", meetingCode) :
                new ObjectParameter("MeetingCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMeetingGallery_Result>("SP_GetMeetingGallery", meetingCodeParameter);
        }
    
        public virtual ObjectResult<SP_GetMeetings_Result> SP_GetMeetings(string staffNo, string meetingCode, string statusOptions, string conditionOptions, string typeOptions, string meetingType, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> meetingStartDate, Nullable<System.DateTime> meetingEndDate)
        {
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            var meetingCodeParameter = meetingCode != null ?
                new ObjectParameter("MeetingCode", meetingCode) :
                new ObjectParameter("MeetingCode", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var conditionOptionsParameter = conditionOptions != null ?
                new ObjectParameter("ConditionOptions", conditionOptions) :
                new ObjectParameter("ConditionOptions", typeof(string));
    
            var typeOptionsParameter = typeOptions != null ?
                new ObjectParameter("TypeOptions", typeOptions) :
                new ObjectParameter("TypeOptions", typeof(string));
    
            var meetingTypeParameter = meetingType != null ?
                new ObjectParameter("MeetingType", meetingType) :
                new ObjectParameter("MeetingType", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var meetingStartDateParameter = meetingStartDate.HasValue ?
                new ObjectParameter("MeetingStartDate", meetingStartDate) :
                new ObjectParameter("MeetingStartDate", typeof(System.DateTime));
    
            var meetingEndDateParameter = meetingEndDate.HasValue ?
                new ObjectParameter("MeetingEndDate", meetingEndDate) :
                new ObjectParameter("MeetingEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMeetings_Result>("SP_GetMeetings", staffNoParameter, meetingCodeParameter, statusOptionsParameter, conditionOptionsParameter, typeOptionsParameter, meetingTypeParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter, meetingStartDateParameter, meetingEndDateParameter);
        }
    
        public virtual ObjectResult<SP_GetMeetingsForCalander_Result> SP_GetMeetingsForCalander(string staffNo, string type, string place, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMeetingsForCalander_Result>("SP_GetMeetingsForCalander", staffNoParameter, typeParameter, placeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int SP_GetMeetingsReport(string staffNo, string meetingCode, string statusOptions, string conditionOptions, string typeOptions, string meetingType, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> meetingStartDate, Nullable<System.DateTime> meetingEndDate, string type, string basedDate)
        {
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            var meetingCodeParameter = meetingCode != null ?
                new ObjectParameter("MeetingCode", meetingCode) :
                new ObjectParameter("MeetingCode", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var conditionOptionsParameter = conditionOptions != null ?
                new ObjectParameter("ConditionOptions", conditionOptions) :
                new ObjectParameter("ConditionOptions", typeof(string));
    
            var typeOptionsParameter = typeOptions != null ?
                new ObjectParameter("TypeOptions", typeOptions) :
                new ObjectParameter("TypeOptions", typeof(string));
    
            var meetingTypeParameter = meetingType != null ?
                new ObjectParameter("MeetingType", meetingType) :
                new ObjectParameter("MeetingType", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var meetingStartDateParameter = meetingStartDate.HasValue ?
                new ObjectParameter("MeetingStartDate", meetingStartDate) :
                new ObjectParameter("MeetingStartDate", typeof(System.DateTime));
    
            var meetingEndDateParameter = meetingEndDate.HasValue ?
                new ObjectParameter("MeetingEndDate", meetingEndDate) :
                new ObjectParameter("MeetingEndDate", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var basedDateParameter = basedDate != null ?
                new ObjectParameter("BasedDate", basedDate) :
                new ObjectParameter("BasedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetMeetingsReport", staffNoParameter, meetingCodeParameter, statusOptionsParameter, conditionOptionsParameter, typeOptionsParameter, meetingTypeParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter, meetingStartDateParameter, meetingEndDateParameter, typeParameter, basedDateParameter);
        }
    
        public virtual ObjectResult<SP_GetParticipants_Result> SP_GetParticipants(string certificateNo, string meetingCode, string controlBy, string staffNo, string statusOptions, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> meetingStartDate, Nullable<System.DateTime> meetingEndDate, string meetingCondition, string notification)
        {
            var certificateNoParameter = certificateNo != null ?
                new ObjectParameter("CertificateNo", certificateNo) :
                new ObjectParameter("CertificateNo", typeof(string));
    
            var meetingCodeParameter = meetingCode != null ?
                new ObjectParameter("MeetingCode", meetingCode) :
                new ObjectParameter("MeetingCode", typeof(string));
    
            var controlByParameter = controlBy != null ?
                new ObjectParameter("ControlBy", controlBy) :
                new ObjectParameter("ControlBy", typeof(string));
    
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var meetingStartDateParameter = meetingStartDate.HasValue ?
                new ObjectParameter("MeetingStartDate", meetingStartDate) :
                new ObjectParameter("MeetingStartDate", typeof(System.DateTime));
    
            var meetingEndDateParameter = meetingEndDate.HasValue ?
                new ObjectParameter("MeetingEndDate", meetingEndDate) :
                new ObjectParameter("MeetingEndDate", typeof(System.DateTime));
    
            var meetingConditionParameter = meetingCondition != null ?
                new ObjectParameter("MeetingCondition", meetingCondition) :
                new ObjectParameter("MeetingCondition", typeof(string));
    
            var notificationParameter = notification != null ?
                new ObjectParameter("Notification", notification) :
                new ObjectParameter("Notification", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetParticipants_Result>("SP_GetParticipants", certificateNoParameter, meetingCodeParameter, controlByParameter, staffNoParameter, statusOptionsParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter, meetingStartDateParameter, meetingEndDateParameter, meetingConditionParameter, notificationParameter);
        }
    
        public virtual int SP_GetParticipantsReport(string meetingCode, string controlBy, string statusOptions, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string type, string basedDate, Nullable<System.DateTime> meetingStartDate, Nullable<System.DateTime> meetingEndDate, string conditionOptions, string typeOptions, string meetingType)
        {
            var meetingCodeParameter = meetingCode != null ?
                new ObjectParameter("MeetingCode", meetingCode) :
                new ObjectParameter("MeetingCode", typeof(string));
    
            var controlByParameter = controlBy != null ?
                new ObjectParameter("ControlBy", controlBy) :
                new ObjectParameter("ControlBy", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var basedDateParameter = basedDate != null ?
                new ObjectParameter("BasedDate", basedDate) :
                new ObjectParameter("BasedDate", typeof(string));
    
            var meetingStartDateParameter = meetingStartDate.HasValue ?
                new ObjectParameter("MeetingStartDate", meetingStartDate) :
                new ObjectParameter("MeetingStartDate", typeof(System.DateTime));
    
            var meetingEndDateParameter = meetingEndDate.HasValue ?
                new ObjectParameter("MeetingEndDate", meetingEndDate) :
                new ObjectParameter("MeetingEndDate", typeof(System.DateTime));
    
            var conditionOptionsParameter = conditionOptions != null ?
                new ObjectParameter("ConditionOptions", conditionOptions) :
                new ObjectParameter("ConditionOptions", typeof(string));
    
            var typeOptionsParameter = typeOptions != null ?
                new ObjectParameter("TypeOptions", typeOptions) :
                new ObjectParameter("TypeOptions", typeof(string));
    
            var meetingTypeParameter = meetingType != null ?
                new ObjectParameter("MeetingType", meetingType) :
                new ObjectParameter("MeetingType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetParticipantsReport", meetingCodeParameter, controlByParameter, statusOptionsParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter, typeParameter, basedDateParameter, meetingStartDateParameter, meetingEndDateParameter, conditionOptionsParameter, typeOptionsParameter, meetingTypeParameter);
        }
    
        public virtual ObjectResult<SP_GetPlace_Result> SP_GetPlace(string placeCode, string statusOptions, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string staffNo, string controlBy)
        {
            var placeCodeParameter = placeCode != null ?
                new ObjectParameter("PlaceCode", placeCode) :
                new ObjectParameter("PlaceCode", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            var controlByParameter = controlBy != null ?
                new ObjectParameter("ControlBy", controlBy) :
                new ObjectParameter("ControlBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetPlace_Result>("SP_GetPlace", placeCodeParameter, statusOptionsParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter, staffNoParameter, controlByParameter);
        }
    
        public virtual ObjectResult<SP_GetPlaceRecord_Result> SP_GetPlaceRecord(string staffNo, string place, string statusOptions, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetPlaceRecord_Result>("SP_GetPlaceRecord", staffNoParameter, placeParameter, statusOptionsParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetPlaceWithFactory_Result> SP_GetPlaceWithFactory(string placeCode, string statusOptions, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string factoryID, string controlBy)
        {
            var placeCodeParameter = placeCode != null ?
                new ObjectParameter("PlaceCode", placeCode) :
                new ObjectParameter("PlaceCode", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var factoryIDParameter = factoryID != null ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(string));
    
            var controlByParameter = controlBy != null ?
                new ObjectParameter("ControlBy", controlBy) :
                new ObjectParameter("ControlBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetPlaceWithFactory_Result>("SP_GetPlaceWithFactory", placeCodeParameter, statusOptionsParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter, factoryIDParameter, controlByParameter);
        }
    
        public virtual ObjectResult<SP_GetRoles_Result> SP_GetRoles(string roleCode, string statusOptions, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRoles_Result>("SP_GetRoles", roleCodeParameter, statusOptionsParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetUserProfiles_Result> SP_GetUserProfiles(string staffNo, string statusOptions, string criteria, string text, string dateType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            var statusOptionsParameter = statusOptions != null ?
                new ObjectParameter("StatusOptions", statusOptions) :
                new ObjectParameter("StatusOptions", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetUserProfiles_Result>("SP_GetUserProfiles", staffNoParameter, statusOptionsParameter, criteriaParameter, textParameter, dateTypeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> SP_GetViewDepartments(string staffNo)
        {
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetViewDepartments", staffNoParameter);
        }
    
        public virtual ObjectResult<string> SP_GetViewFactorys(string staffNo)
        {
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetViewFactorys", staffNoParameter);
        }
    
        public virtual ObjectResult<string> SP_GetViewLocations(string staffNo)
        {
            var staffNoParameter = staffNo != null ?
                new ObjectParameter("StaffNo", staffNo) :
                new ObjectParameter("StaffNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetViewLocations", staffNoParameter);
        }
    
        public virtual ObjectResult<string> SP_LocationConnectFactory(string locationCode)
        {
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_LocationConnectFactory", locationCodeParameter);
        }
    
        public virtual ObjectResult<string> SP_PlaceConnectFactory(string placeCode)
        {
            var placeCodeParameter = placeCode != null ?
                new ObjectParameter("PlaceCode", placeCode) :
                new ObjectParameter("PlaceCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_PlaceConnectFactory", placeCodeParameter);
        }
    }
}
