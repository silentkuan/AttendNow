@model List<SP_GetDepartments_Result>
@using AttendNow.Models
@{
    var departmentAccess = ViewBag.departmentAccess as sys_setting_role_permission;
 List<sys_setting_define_table> defineTableList = ViewBag.DefineTable as List<sys_setting_define_table>;
    if (departmentAccess?.status != true)
    {

        <script>

        window.location.href = '@Url.Action("Logout", "User")';
        </script>
    }

}
<div class="modal fade" id="filter-model" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Filter</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if ((departmentAccess?.status == true && departmentAccess?.deleteFunction == true))
                {
                    <div class="col-md-12">

                        <div class="form-group">
                            <h5>Status</h5>
                            <h5 class="mr-3">
                                <input type="checkbox" class="selectAllCheckbox" onchange="selectAllCheckboxes(this,'statusFilter')"> Select All
                            </h5>
                            <div class="checkbox">

                                <label class="mr-3">
                                    <input type="checkbox" name="statusFilter" value="A" onchange="handleCheckboxChange(this.name)"> Active
                                </label>

                                <label class="mr-3">
                                    <input type="checkbox" name="statusFilter" value="V" onchange="handleCheckboxChange(this.name)"> Inactive
                                </label>
                            </div>



                        </div>
                        
                    </div>
                    <hr />
                }
                    <div class="col-md-12">
                        <div class="form-group">


                            <h5>Option</h5>
                            <select id="searchCriteria" class="form-control">
                                <option value="null" selected>Select an option</option>
                                <!-- Add your options here -->
                            </select>
                            <input type="text" id="searchInput" class="form-control mt-1" placeholder="Type to search..." disabled>




                        </div>
                    </div>
                    <hr />
                    <div class="col-md-12">
                        <div class="form-group">
                            <h5>Date</h5>
                            <div class="form-group row">
                                <label for="startDate" class="col-sm-3 col-form-label">Option:</label>
                                <div class="col-sm-9">
                                    <select id="searchType" class="form-control">
                                        <option value="null" selected>Select an option</option>
                                        <option value="createDate">Created Date</option>

                                        <option value="editDate">Edited Date</option>-->
                                    </select>
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="startDate" class="col-sm-3 col-form-label">Start Date:</label>
                                <div class="col-sm-9">
                                    <input type="date" id="startDate" class="form-control mt-1" disabled>
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="endDate" class="col-sm-3 col-form-label">End Date:</label>
                                <div class="col-sm-9">
                                    <input type="date" id="endDate" class="form-control mt-1" disabled>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-w-m" onclick="clearFilter()">Clear </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="searchAll('Department','','','Department Report','Departments','@Session["timezone"].ToString()')">Search</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="define-table" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Set Up Your Custom Table Fields</h5>
                
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="col-md-12">
                    <div class="form-group">


                        <div class="row">
                            <div class="col-6">
                                <input type="checkbox"  onclick="checkAllDefineTable(this)"> <b class="mt-1">Select All</b> <br /><br />
                                <input type="checkbox" class="user-define" name="department_code" @(defineTableList.Any(dt => dt.field == "department_code" && dt.status == "A") ? "checked" : "")> Department ID
                                <br>
                                <input type="checkbox" class="user-define" name="name" @(defineTableList.Any(dt => dt.field == "name" && dt.status == "A") ? "checked" : "")> Name
                                <br>

                                <input type="checkbox" class="user-define" name="createBy" @(defineTableList.Any(dt => dt.field == "createBy" && dt.status == "A") ? "checked" : "")> Created By
                                <br>
                                <input type="checkbox" class="user-define" name="createDate" @(defineTableList.Any(dt => dt.field == "createDate" && dt.status == "A") ? "checked" : "")> Created Date
                                <br>
                                <input type="checkbox" class="user-define" name="editBy" @(defineTableList.Any(dt => dt.field == "editBy" && dt.status == "A") ? "checked" : "")> Edited By
                                <br>
                                <input type="checkbox" class="user-define" name="editDate" @(defineTableList.Any(dt => dt.field == "editDate" && dt.status == "A") ? "checked" : "")> Edited Date

                            </div>


                        </div>


                    </div>



                </div>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                @if (defineTableList != null && defineTableList.Count == 0)
                {


    <button type="button" class="btn btn-primary" onclick="defineTable('department','AddUserDefine')">Define</button> }
                else
                {
    <button type="button" class="btn btn-primary" onclick="defineTable('department','EditUserDefine')">Define</button>}

            </div>
        </div>
    </div>
</div>
<div class="bottomBtn">
    <button class="btn btn-primary btn-circle btn-lg" type="button" onclick="goFilter()" data-toggle="tooltip" data-placement="left" title="Filter">
        <i class="fa fa-filter"></i>
    </button>
</div>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Department Management</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a>Department</a>
            </li>
            <li class=" breadcrumb-item">
                <strong><a href="@Url.Action("Index", "Department")">Department List</a></strong>
            </li>
        </ol>
        @if ((departmentAccess?.status == true && departmentAccess?.addFunction == true))
        {

            <a class="btn btn-primary mt-2" href="@Url.Action("MainForm", "Department")">Add Department</a>}

    </div>
</div>

@if (ViewBag.ErrorMessage == null)
{
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row" id="filter">
        <div class="col-lg-12">


            <div class="ibox " id="report">
                <div class="ibox-title">
                    <button class="btn btn-primary btn-sm mr-2" type="button" onclick="$('#define-table').modal('show');">
                        <i class="fa fa-sliders"></i>
                    </button>
                    <h5>Department List</h5>

                </div>
                <div class="ibox-content">

                    <div class="table-responsive" >
                        <div id="DataTables_Table_0_wrapper" class="dataTables_wrapper dt-bootstrap4">
                            <table class="table table-striped table-bordered table-hover dataTables-example dataTable statusAsc" id="DataTables_Table_0" aria-describedby="DataTables_Table_0_info" role="grid">
                                <thead>
                                    <tr>
                                        @if (defineTableList.Any(dt => dt.field == "department_code" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <th data-column-name="department_code"> Department ID </th>
                                        }
                                        @if (defineTableList.Any(dt => dt.field == "name" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <th data-column-name="name"> Name </th>
                                        }

                                        @if (defineTableList.Any(dt => dt.field == "createBy" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <th data-column-name="createBy"> Created By </th>
                                        }
                                        @if (defineTableList.Any(dt => dt.field == "createDate" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <th data-column-name="createDate"> Created Date </th>
                                        }
                                        @if (defineTableList.Any(dt => dt.field == "editBy" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <th data-column-name="editBy"> Edited By </th>
                                        }
                                        @if (defineTableList.Any(dt => dt.field == "editDate" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <th data-column-name="editDate"> Edited Date </th>
                                        }
                                        @if ((departmentAccess?.status == true && departmentAccess?.deleteFunction == true))
                                        {
                                            <th data-column-name="status"> Status </th>
                                        }
                                            @if ((departmentAccess?.status == true && departmentAccess?.viewFunction == true)
                                                 || (departmentAccess?.status == true && departmentAccess?.editFunction == true)
                                                 || (departmentAccess?.status == true && departmentAccess?.deleteFunction == true))
                                            {
                                                <th>Action</th>
                                            }
                                        </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                    <tr>
                                        @if (defineTableList.Any(dt => dt.field == "department_code" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <td @if ((departmentAccess?.status == true && departmentAccess?.viewFunction == true) || (departmentAccess?.status == true && departmentAccess?.editFunction == true)) { <text> class="clickable-row" data-href="@Url.Action("MainForm", "Department", new { id = item.department_code })" </text>  } else { <text></text> }>

                                            @item.department_code.ToUpper()
                                        </td>
                                        }


                                        @if (defineTableList.Any(dt => dt.field == "name" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <td @if ((departmentAccess?.status == true && departmentAccess?.viewFunction == true) || (departmentAccess?.status == true && departmentAccess?.editFunction == true)) { <text> class="clickable-row" data-href="@Url.Action("MainForm", "Department", new { id = item.department_code })" </text>  } else { <text></text> }>
                                            @Html.DisplayFor(modelItem => item.name)
                                        </td>
                                        }

                                        @if (defineTableList.Any(dt => dt.field == "createBy" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <td @if ((departmentAccess?.status == true && departmentAccess?.viewFunction == true) || (departmentAccess?.status == true && departmentAccess?.editFunction == true)) { <text> class="clickable-row" data-href="@Url.Action("MainForm", "Department", new { id = item.department_code })" </text>  } else { <text></text> }>
                                            @Html.DisplayFor(modelItem => item.CreateByName) (@item.createBy.ToUpper())
                                        </td>
                                        }

                                        @if (defineTableList.Any(dt => dt.field == "createDate" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <td @if ((departmentAccess?.status == true && departmentAccess?.viewFunction == true) || (departmentAccess?.status == true && departmentAccess?.editFunction == true)) { <text> class="clickable-row" data-href="@Url.Action("MainForm", "Department", new { id = item.department_code })" </text>  } else { <text></text> }>
                                            <span class="createDate">@string.Format("{0:dd/MM/yyyy hh:mm:ss tt}", item.createDate)</span>

                                        </td>
                                        }

                                        @if (defineTableList.Any(dt => dt.field == "editBy" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <td @if ((departmentAccess?.status == true && departmentAccess?.viewFunction == true) || (departmentAccess?.status == true && departmentAccess?.editFunction == true)) { <text> class="clickable-row" data-href="@Url.Action("MainForm", "Department", new { id = item.department_code })" </text>  } else { <text></text> }>
                                            @if (item.editBy != null && !string.IsNullOrEmpty(item.editBy))
                                            {
                                                @Html.DisplayFor(modelItem => item.EditByName) <span>(@item.editBy.ToUpper())</span>

                                            }
                                            else
                                            {
                                                <span class="text-danger">No Data</span>
                                            }
                                        </td>
                                        }

                                        @if (defineTableList.Any(dt => dt.field == "editDate" && dt.status == "A") || (defineTableList != null && defineTableList.Count == 0))
                                        {
                                        <td @if ((departmentAccess?.status == true && departmentAccess?.viewFunction == true) || (departmentAccess?.status == true && departmentAccess?.editFunction == true)) { <text> class="clickable-row" data-href="@Url.Action("MainForm", "Department", new { id = item.department_code })" </text>  } else { <text></text> }>
                                            @if (item.editDate != null)
                                            {
                                                <span class="editDate">@string.Format("{0:dd/MM/yyyy hh:mm:ss tt}", item.editDate)</span>

                                            }
                                            else
                                            {
                                                <span class="editDate text-danger">No Data</span>
                                            }
                                        </td>
                                        }
                                        @if ((departmentAccess?.status == true && departmentAccess?.deleteFunction == true))
                                        {
                                            <td @if ((departmentAccess?.status == true && departmentAccess?.viewFunction == true) || (departmentAccess?.status == true && departmentAccess?.editFunction == true))
                                            { <text> class="clickable-row" data-href="@Url.Action("MainForm", "Department", new { id = item.department_code })" </text>  }
                                            else
                                            { <text></text> }>
                                                @if (item.status == "A")
                                                {


                                                    <span class="text-primary">Active</span>
                                                }

                                                else
                                                {<span class="text-danger">Inactive</span>}

                                            </td>
                                        }
                                            @if ((departmentAccess?.status == true && departmentAccess?.viewFunction == true)
                                       || (departmentAccess?.status == true && departmentAccess?.editFunction == true)
                                       || (departmentAccess?.status == true && departmentAccess?.deleteFunction == true))
                                            {
                                                <td class="centered-cell nowrap-cell">
                                                    @if ((departmentAccess?.status == true && departmentAccess?.editFunction == true))

                                                    {
                                                        @Html.ActionLink("Edit", "MainForm", new { id = item.department_code }, new { @class = "btn btn-primary" })
                                                    }
                                                    else if ((departmentAccess?.status == true && departmentAccess?.viewFunction == true))
                                                    {
                                                        @Html.ActionLink("View", "MainForm", new { id = item.department_code }, new { @class = "btn btn-primary" })
                                                    }

                                                    @if ((departmentAccess?.status == true && departmentAccess?.deleteFunction == true))
                                                    {
                                                        if (item.status == "A")
                                                        {
                                                            <button onclick="updateStatus('Department', '@item.department_code', '@item.status','','Department Report','Department','@Session["timezone"].ToString()')" style="width:6em;" class="btn btn-danger" data-user-id="@item.department_code" data-status="@item.status">
                                                                Inactive
                                                            </button>
                                                        }
                                                        else
                                                        {
                                                            <button onclick="updateStatus('Department', '@item.department_code', '@item.status','','Department Report','Department','@Session["timezone"].ToString()')" style="width:6em;" class="btn btn-info" data-user-id="@item.department_code" data-status="@item.status">
                                                                Reactive
                                                            </button>
                                                        }
                                                    }
                                                </td>
                                            }
                                        </tr>
                                    }

                                </tbody>

                            </table>
                           
                        </div>
                    </div>

                </div>
            </div>
            <div>
               
            </div>
        </div>
    </div>
    
</div>
}
else
{
    @Html.Partial("~/Views/Home/_Error.cshtml")
}

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/main")
<script type="text/javascript">
        var selectedOptions = [];
        $(document).ready(function () {
            convertTableTimeZone('@Session["timezone"].ToString()');
            initializeDataTable('Departments','','Department Report');
            statusAsc();
            successMessage('@TempData["SuccessMessage"]');
            errorMessage('@ViewBag.ErrorMessage');
        });

</script>
}